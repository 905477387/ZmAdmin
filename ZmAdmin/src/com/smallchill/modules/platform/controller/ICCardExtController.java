package com.smallchill.modules.platform.controller;

import com.smallchill.common.base.BaseController;
import com.smallchill.core.annotation.Json;
import com.smallchill.core.aop.AopContext;
import com.smallchill.core.constant.ConstShiro;
import com.smallchill.core.meta.PageIntercept;
import com.smallchill.core.shiro.ShiroKit;
import com.smallchill.core.toolbox.kit.JsonKit;
import com.smallchill.modules.platform.model.ICCard;
import com.smallchill.modules.platform.service.ICCardService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import java.util.Map;

/**
 * Generated by Blade.
 * 2017-09-09 15:42:39
 */
@Controller
@RequestMapping("/iccardext")
public class ICCardExtController extends BaseController {
	private static String CODE = "iccardext";
	private static String PREFIX = "tb_iccard";
	private static String LIST_SOURCE = "iccard.list";
	private static String BASE_PATH = "/modules/platform/iccardext/";
	
	@Autowired
    ICCardService service;
	
	@RequestMapping(KEY_MAIN)
	public String index(ModelMap mm) {
		mm.put("code", CODE);
		return BASE_PATH + "iccard.html";
	}

	@RequestMapping(KEY_ADD)
	public String add(ModelMap mm) {
		mm.put("code", CODE);
		return BASE_PATH + "iccard_add.html";
	}



	@RequestMapping(KEY_VIEW + "/{id}")
	public String view(@PathVariable String id, ModelMap mm) {
		ICCard iCCard = service.findById(id);
		mm.put("model", JsonKit.toJson(iCCard));
		mm.put("code", CODE);
		mm.put("id", id);
		return BASE_PATH + "iccard_view.html";
	}

	@Json
	@RequestMapping(KEY_LIST)
	public Object list() {
		Object grid = paginate(LIST_SOURCE, new PageIntercept(){
            @Override
            public void queryBefore(AopContext ac) {
                if (ShiroKit.hasRole(ConstShiro.COMPANY)) {
                    Map<String, Object> param = ac.getParam();
                    param.put("CustNo", ShiroKit.getUser().getDeptId());
                    ac.setCondition("and CustNo = #{CustNo} and CardStatus = " + toStr(param.get("CardStatus"), "2"));
                }
                if (ShiroKit.hasRole(ConstShiro.STATION)) {
                    Map<String, Object> param = ac.getParam();
                    param.put("StationNo", ShiroKit.getUser().getDeptId());
                    ac.setCondition("and CustNo in (select CustNo from tb_custom where StationNo = #{StationNo}) and CardStatus = " + toStr(param.get("CardStatus"), "2"));
                }
            }
        });
		return grid;
	}


}
