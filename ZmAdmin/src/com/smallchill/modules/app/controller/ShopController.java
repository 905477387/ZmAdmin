package com.smallchill.modules.app.controller;

import com.smallchill.common.base.BaseController;
import com.smallchill.core.annotation.Json;
import com.smallchill.core.toolbox.ApiResult;
import com.smallchill.core.toolbox.CMap;
import com.smallchill.core.toolbox.kit.JsonKit;
import com.smallchill.modules.app.model.Shop;
import com.smallchill.modules.app.service.ShopService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

/**
 * Generated by Blade.
 * 2017-11-09 18:24:22
 */
@Controller
@RequestMapping("/shop")
public class ShopController extends BaseController {
	private static String CODE = "shop";
	private static String PREFIX = "tb_shop";
	private static String LIST_SOURCE = "shop.list";
	private static String BASE_PATH = "/modules/app/shop/";
	
	@Autowired
    ShopService service;
	
	@RequestMapping(KEY_MAIN)
	public String index(ModelMap mm) {
		mm.put("code", CODE);
		return BASE_PATH + "shop.html";
	}

	@RequestMapping(KEY_ADD)
	public String add(ModelMap mm) {
		mm.put("code", CODE);
		return BASE_PATH + "shop_add.html";
	}

	@RequestMapping(KEY_EDIT + "/{id}")
	public String edit(@PathVariable Integer id, ModelMap mm) {
		Shop shop = service.findById(id);
		mm.put("model", JsonKit.toJson(shop));
		mm.put("id", id);
		mm.put("code", CODE);
		return BASE_PATH + "shop_edit.html";
	}

	@RequestMapping(KEY_VIEW + "/{id}")
	public String view(@PathVariable Integer id, ModelMap mm) {
		Shop shop = service.findById(id);
		mm.put("model", JsonKit.toJson(shop));
		mm.put("id", id);
		mm.put("code", CODE);
		return BASE_PATH + "shop_view.html";
	}

	@Json
	@RequestMapping(KEY_LIST)
	public Object list() {
		Object grid = paginate(LIST_SOURCE);
		return grid;
	}

	@Json
	@RequestMapping(KEY_SAVE)
	public ApiResult save() {
		Shop shop = mapping(PREFIX, Shop.class);
		if (service.count("phone = #{phone} and is_deleted = 0", shop) > 0) {
		    return error("该手机已存在");
        }
		boolean temp = service.save(shop);
		if (temp) {
			return success(SAVE_SUCCESS_MSG);
		} else {
			return error(SAVE_FAIL_MSG);
		}
	}

	@Json
	@RequestMapping(KEY_UPDATE)
	public ApiResult update() {
		Shop shop = mapping(PREFIX, Shop.class);
        if (service.count("phone = #{phone} and is_deleted = 0 and id <> #{id}", shop) > 0) {
            return error("该手机已存在");
        }
		boolean temp = service.update(shop);
		if (temp) {
			return success(UPDATE_SUCCESS_MSG);
		} else {
			return error(UPDATE_FAIL_MSG);
		}
	}

	@Json
	@RequestMapping(KEY_REMOVE)
	public ApiResult remove(@RequestParam String ids) {
        boolean temp = service.updateBy("is_deleted = 1", "id in (#{join(ids)})", CMap.init().set("ids", toArray(ids)));
        if (temp) {
            return success(DEL_SUCCESS_MSG);
        } else {
            return error(DEL_FAIL_MSG);
        }
	}
}
